// <auto-generated />
using System;
using CleanHosp_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CleanHosp_API.Migrations
{
    [DbContext(typeof(CleanHospDBContext))]
    [Migration("20240428235708_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CleanHosp_API.Model.Ala.AlaModel", b =>
                {
                    b.Property<int>("ala_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ala_id"));

                    b.Property<string>("ds_descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("local_id")
                        .HasColumnType("integer");

                    b.HasKey("ala_id");

                    b.HasIndex("local_id");

                    b.ToTable("ala");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Equipamento.EquipamentoModel", b =>
                {
                    b.Property<int>("equipamento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("equipamento_id"));

                    b.Property<int?>("EquipamentoUtilizadoequipamentos_utilizados_id")
                        .HasColumnType("integer");

                    b.Property<string>("ds_descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ds_marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ds_modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ds_nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("dt_aquisicao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("vl_aquisicao")
                        .HasColumnType("numeric");

                    b.Property<bool?>("xAtivo")
                        .HasColumnType("boolean");

                    b.HasKey("equipamento_id");

                    b.HasIndex("EquipamentoUtilizadoequipamentos_utilizados_id");

                    b.ToTable("equipamento");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Equipamento.EquipamentoUtilizadoModel", b =>
                {
                    b.Property<int>("equipamentos_utilizados_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("equipamentos_utilizados_id"));

                    b.Property<int?>("LocalLimpezaModellocalLimpeza_id")
                        .HasColumnType("integer");

                    b.Property<int>("equipamento_id")
                        .HasColumnType("integer");

                    b.Property<int>("nr_tempoUso")
                        .HasColumnType("integer");

                    b.HasKey("equipamentos_utilizados_id");

                    b.HasIndex("LocalLimpezaModellocalLimpeza_id");

                    b.ToTable("equipamentos_utilizados");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Limpeza.LimpezaModel", b =>
                {
                    b.Property<int>("limpeza_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("limpeza_id"));

                    b.Property<string>("ds_descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("limpeza_id");

                    b.ToTable("limpeza");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Local.LocalLimpezaModel", b =>
                {
                    b.Property<int>("localLimpeza_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("localLimpeza_id"));

                    b.Property<int>("ala_id")
                        .HasColumnType("integer");

                    b.Property<string>("ds_descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("dt_fim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("dt_inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("equipamentos_utilizados_id")
                        .HasColumnType("integer");

                    b.Property<int>("limpeza_id")
                        .HasColumnType("integer");

                    b.Property<int>("pessoa_id")
                        .HasColumnType("integer");

                    b.Property<int>("produtos_utilizados_id")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("localLimpeza_id");

                    b.ToTable("local_limpeza");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Local.LocalModel", b =>
                {
                    b.Property<int>("local_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("local_id"));

                    b.Property<int>("ala_id")
                        .HasColumnType("integer");

                    b.Property<string>("ds_descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("local_id");

                    b.ToTable("local");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Pessoa.PessoaModel", b =>
                {
                    b.Property<int>("pessoa_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("pessoa_id"));

                    b.Property<string>("ds_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ds_login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ds_nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ds_senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("nr_cpf")
                        .HasMaxLength(11)
                        .HasColumnType("integer");

                    b.Property<int?>("nr_telefone")
                        .HasMaxLength(20)
                        .HasColumnType("integer");

                    b.HasKey("pessoa_id");

                    b.ToTable("pessoa");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Produto.ProdutoModel", b =>
                {
                    b.Property<int>("produto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("produto_id"));

                    b.Property<int?>("ProdutoUtilizadoModelprodutos_utilizados_id")
                        .HasColumnType("integer");

                    b.Property<string>("ds_descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ds_marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ds_nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("qtde_estoque")
                        .HasColumnType("integer");

                    b.Property<decimal>("vl_unitario")
                        .HasColumnType("numeric");

                    b.HasKey("produto_id");

                    b.HasIndex("ProdutoUtilizadoModelprodutos_utilizados_id");

                    b.ToTable("produto");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Produto.ProdutoUtilizadoModel", b =>
                {
                    b.Property<int>("produtos_utilizados_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("produtos_utilizados_id"));

                    b.Property<int?>("LocalLimpezaModellocalLimpeza_id")
                        .HasColumnType("integer");

                    b.Property<int>("produto_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer");

                    b.HasKey("produtos_utilizados_id");

                    b.HasIndex("LocalLimpezaModellocalLimpeza_id");

                    b.ToTable("produtos_utilizados");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Ala.AlaModel", b =>
                {
                    b.HasOne("CleanHosp_API.Model.Local.LocalModel", "Local")
                        .WithMany()
                        .HasForeignKey("local_id");

                    b.Navigation("Local");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Equipamento.EquipamentoModel", b =>
                {
                    b.HasOne("CleanHosp_API.Model.Equipamento.EquipamentoUtilizadoModel", "EquipamentoUtilizado")
                        .WithMany()
                        .HasForeignKey("EquipamentoUtilizadoequipamentos_utilizados_id");

                    b.Navigation("EquipamentoUtilizado");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Equipamento.EquipamentoUtilizadoModel", b =>
                {
                    b.HasOne("CleanHosp_API.Model.Local.LocalLimpezaModel", null)
                        .WithMany("equipamentosUtilizado")
                        .HasForeignKey("LocalLimpezaModellocalLimpeza_id");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Produto.ProdutoModel", b =>
                {
                    b.HasOne("CleanHosp_API.Model.Produto.ProdutoUtilizadoModel", null)
                        .WithMany("Produtos")
                        .HasForeignKey("ProdutoUtilizadoModelprodutos_utilizados_id");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Produto.ProdutoUtilizadoModel", b =>
                {
                    b.HasOne("CleanHosp_API.Model.Local.LocalLimpezaModel", null)
                        .WithMany("produtosUtilizados")
                        .HasForeignKey("LocalLimpezaModellocalLimpeza_id");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Local.LocalLimpezaModel", b =>
                {
                    b.Navigation("equipamentosUtilizado");

                    b.Navigation("produtosUtilizados");
                });

            modelBuilder.Entity("CleanHosp_API.Model.Produto.ProdutoUtilizadoModel", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
